@model CloudDebugger.Features.Redis.RedisModel
@{
    ViewData["Title"] = "CloudDebugger - Homepage";
}

<h3>Read write keys to Redis</h3>


<form asp-controller="Redis" asp-action="ReadWriteKeys" method="post">

    <table class="table">
        <tr>
            <td class="col-md-2">Connection string</td>
            <td class="col-md-10">
                <input asp-for="ConnectionString" style="min-width:90%"><br />
            </td>
        </tr>


        <tr>
            <td class="col-md-2">Key name</td>
            <td class="col-md-10">
                <input asp-for="Key"><br />
            </td>
        </tr>
        <tr>
            <td class="col-md-2">Key value</td>
            <td class="col-md-10">
                <input asp-for="Value"><br />
            </td>
        </tr>
        <tr>
            <td class="col-md-2">Key Expire (sec)</td>
            <td class="col-md-10">
                <input asp-for="Expire"><br />
            </td>
        </tr>
    </table>
    <input type="submit" name="submit" value="Add key" /><br />

    @if (String.IsNullOrWhiteSpace(Model?.Exception) == false)
    {
        <div class="alert alert-danger" role="alert">
            <pre>@Model.Exception</pre>
        </div>
    }

    @if (String.IsNullOrWhiteSpace(Model?.Message) == false)
    {
        <b>@Model.Message</b>
    }

</form>

<br />
<br />
@if (Model?.RedisKeys != null)
{
    <h4>Keys in the Redis database</h4>

    <table class="table">
        @foreach (var key in Model.RedisKeys)
        {
            <tr>
                <td>@key</td>
            </tr>
        }
    </table>

    @:(<a href="/Redis/ReadWriteKeys"> refresh </a>)
}


