@model CloudDebugger.Features.CredentialsCaching.GetMultipleAccessTokenModel
@{
    ViewData["Title"] = "CloudDebugger - Token caching";
}

<h5>Get the access token multiple times</h5>
This page explores what happens when we request multipel access tokens against DefaultAzureCredential.
<br />
<a href="/Credentials">Back</a>
<br />
<br />

<h5>Get the access token multiple times on the same instance</h5>
What happens if we call GetToken multiple times on the same instance of MyDefaultAzureCredential?
<br />
<table class="table table-bordered">

    @if (Model.SingleInstanceLog != null && Model.SingleInstanceLog.Count > 0)
    {
        foreach (var entry in Model.SingleInstanceLog)
        {
            <tr>
                <td>
                    <pre>@entry</pre>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td>No log data found</td>
        </tr>
    }
</table>



<h5>Get the access token multiple times on the same instance</h5>
What happens if we call GetToken multiple times on the a new instance of MyDefaultAzureCredential each time?
<br />

<table class="table table-bordered">

    @if (Model.MultipleInstancesLog != null && Model.MultipleInstancesLog.Count > 0)
    {
        foreach (var entry in Model.MultipleInstancesLog)
        {
            <tr>
                <td>
                    <pre>@entry</pre>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td>No log data found</td>
        </tr>
    }
</table>




@if (String.IsNullOrWhiteSpace(Model.ErrorMessage) == false)
{
    <div class="alert alert-danger" role="alert">
        <pre>@Model.ErrorMessage</pre>
    </div>
}

@if (String.IsNullOrWhiteSpace(Model.Message) == false)
{
    <b>@Model.Message</b>
}





<h5>Conclusions</h5>
<ul>
    <li>Reusing the same instance improves performance because we can use the cached access token.</li>
</ul>